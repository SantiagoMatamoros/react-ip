-----------------------------BOTONES CON XAML-------------------------
 <Grid>
        <Button Margin="193,56,507,278">
            <Button.Width>200</Button.Width>
            <Button.Height>100</Button.Height>
            <Button.Content>
                <WrapPanel>
                    <TextBlock Foreground="Chocolate">Hola</TextBlock>
                    <TextBlock Foreground="DarkCyan">Click</TextBlock>
                    <TextBlock Foreground="MediumBlue">Enviar</TextBlock>
                </WrapPanel>
            </Button.Content>
        </Button>
    </Grid
    
    ---------------------------GRID CON XAML----------------------------
    <Window x:Class="practicaWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:practicaWPF"
        mc:Ignorable="d"
        Title="Interfaz WPF" Height="450" Width="1200">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>

        <Button Grid.Column="0" Grid.Row="0">Boton 1</Button>
        <Button Grid.Column="1" Grid.Row="0">Boton 2</Button>
        <Button Grid.Column="2" Grid.Row="0">Boton 3</Button>
        <Button Grid.Column="0" Grid.Row="1">Boton 4</Button>
        <Button Grid.Column="1" Grid.Row="1">Boton 5</Button>
        <Button Grid.Column="2" Grid.Row="1">Boton 6</Button>

        <Grid Grid.Column="0" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                
            </Grid.RowDefinitions>

            <Button Grid.Column="0" Grid.Row="0">Boton 1</Button>
            <Button Grid.Column="1" Grid.Row="0">Boton 2</Button>
            <Button Grid.Column="2" Grid.Row="0">Boton 3</Button>
            <Button Grid.Column="0" Grid.Row="1">Boton 4</Button>
            <Button Grid.Column="1" Grid.Row="1">Boton 5</Button>
            <Button Grid.Column="2" Grid.Row="1">Boton 6</Button>
        </Grid>

        <Grid Grid.Column="1" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>

            </Grid.RowDefinitions>

            <Button Grid.Column="0" Grid.Row="0">Boton 1</Button>
            <Button Grid.Column="1" Grid.Row="0">Boton 2</Button>
            <Button Grid.Column="2" Grid.Row="0">Boton 3</Button>
            <Button Grid.Column="0" Grid.Row="1">Boton 4</Button>
            <Button Grid.Column="1" Grid.Row="1">Boton 5</Button>
            <Button Grid.Column="2" Grid.Row="1">Boton 6</Button>
        </Grid>
        <Grid Grid.Column="2" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>

            </Grid.RowDefinitions>

            <Button Grid.Column="0" Grid.Row="0">Boton 1</Button>
            <Button Grid.Column="1" Grid.Row="0">Boton 2</Button>
            <Button Grid.Column="2" Grid.Row="0">Boton 3</Button>
            <Button Grid.Column="0" Grid.Row="1">Boton 4</Button>
            <Button Grid.Column="1" Grid.Row="1">Boton 5</Button>
            <Button Grid.Column="2" Grid.Row="1">Boton 6</Button>
        </Grid>


    </Grid>
</Window>

---------------------------DATA BINDING---------------------------
<StackPanel>

        <TextBox Width="100" Name="miCuadro" Margin="150" Text="{Binding ElementName=miSlider, Path=Value, Mode=TwoWay}"></TextBox>

        <Slider Width="350" Name="miSlider" Minimum="0" Maximum="100"></Slider>
        
    </StackPanel>
    
-------------------------------------------------------INOTIFYpROPERTYcHANGED----------------------------------------------------
------------------------CLASS CAMBIONOMBRE------------------------------
namespace practicaWPF
{
    public class CambioNombre : INotifyPropertyChanged
    {
        private string nombre, apellido, nombreCompleto;

        public event PropertyChangedEventHandler PropertyChanged;

        private void OnPropertyChanged(string property)
        {
            if(PropertyChanged is null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(property));
            }
        }

        public string Nombre { get { return nombre; } set { nombre = value; OnPropertyChanged("Nombre_completo"); } }
        public string Apellido { get { return apellido; } set { apellido = value; OnPropertyChanged("Nombre_completo"); } }
        public string Nombre_completo { get {nombreCompleto = Nombre + " " + Apellido; return nombreCompleto; } set {  } }

    }
}

-----------------------------CLASE MAINWINDOWN-------------------------
namespace practicaWPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            CambioNombre juntaNombreYApellido = new CambioNombre { Nombre = "Juan", Apellido = "Diaz" };

            this.DataContext = juntaNombreYApellido;
        }
    }
}

--------------------------------CODIGO XAML-----------------------------------------
<StackPanel>

        <Label Content="Nombre"></Label>
        <TextBox Width="100" Height="30" Margin="10" Text="{Binding Path=Nombre, Mode=TwoWay}"></TextBox>
        <Label Content="Apellido"></Label>
        <TextBox Width="100" Height="30" Margin="10" Text="{Binding Path=Apellido, Mode=TwoWay}"></TextBox>
        <Label Content="Nombre Completo"></Label>
        <TextBox Width="100" Height="30" Margin="10" Text="{Binding Path=Nombre_completo, Mode=TwoWay}"></TextBox>
        
    </StackPanel>
    
    ------------------------BOTON CON C#---------------------------
    using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace practicaWPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            Grid miGrid = new Grid();
            this.Content = miGrid;
            Button btn = new Button();
            WrapPanel miWrap = new WrapPanel();

            TextBlock txt1 = new TextBlock();
            txt1.Background = Brushes.Red;
            txt1.Foreground = Brushes.SeaGreen;
            txt1.Text = "Clic";
            miWrap.Children.Add(txt1);

            TextBlock txt2 = new TextBlock();
            txt2.Text = "Enviar";
            miWrap.Children.Add(txt2);

            TextBlock txt3 = new TextBlock();
            txt3.Text = "Añadir";
            miWrap.Children.Add(txt3);

            btn.Content = miWrap;

            miGrid.Children.Add(btn);
        }
    }
}

--------------------------------------------------------------------LISTBOX-------------------------------------------------------------
----------------------------CODIGO C#------------------------
namespace practicaWPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            List<Poblacion> listaPob = new List<Poblacion>();
            listaPob.Add(new Poblacion() { Poblacion1 = "Marid", Poblacion2 = "Barcelona", Temperatura1 = 26, Temperatura2 = 18, DiferenciaTemp = 8});
            listaPob.Add(new Poblacion() { Poblacion1 = "Valencia", Poblacion2 = "Alicante", Temperatura1 = 9, Temperatura2 = 21, DiferenciaTemp = 12});
            listaPob.Add(new Poblacion() { Poblacion1 = "Malaga", Poblacion2 = "Bilbao", Temperatura1 = 12, Temperatura2 = 19, DiferenciaTemp = 6});
            listaPob.Add(new Poblacion() { Poblacion1 = "Sevilla", Poblacion2 = "Coruña", Temperatura1 = 24, Temperatura2 = 25, DiferenciaTemp = 1});

            listaPoblacion.ItemsSource = listaPob;  
        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                MessageBox.Show((listaPoblacion.SelectedItem as Poblacion).Poblacion1 + " " + (listaPoblacion.SelectedItem as Poblacion).Temperatura1 + " °C " +
                (listaPoblacion.SelectedItem as Poblacion).Poblacion2 + " " + (listaPoblacion.SelectedItem as Poblacion).Temperatura2 + " °C ");
            }
            catch (Exception)
            {
                MessageBox.Show("Debes seleccionar un item!");
            }
            
        }

        private void TextBlock_PreviewMouseDown(object sender, MouseButtonEventArgs e)
        {
            MessageBox.Show((listaPoblacion.SelectedItem as Poblacion).Poblacion1 + " " + (listaPoblacion.SelectedItem as Poblacion).Temperatura1 + " °C " +
            (listaPoblacion.SelectedItem as Poblacion).Poblacion2 + " " + (listaPoblacion.SelectedItem as Poblacion).Temperatura2 + " °C ");
        }
    }

    public class Poblacion
    {
        public string Poblacion1 { get; set; }
        public int Temperatura1 { get; set; }

        public string Poblacion2 { get; set; }
        public int Temperatura2 { get; set; }

        public int DiferenciaTemp{ get; set; }
    }

}

-----------------------------------------CODIGO XAML--------------------------------------------
Window x:Class="practicaWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:practicaWPF"
        mc:Ignorable="d"
        Title="Interfaz WPF" Height="550" Width="1200">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="200"></RowDefinition>
        </Grid.RowDefinitions>

        <ListBox Name="listaPoblacion" HorizontalContentAlignment ="Stretch">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" PreviewMouseDown="TextBlock_PreviewMouseDown" Text="{Binding Poblacion1}"></TextBlock>
                        <TextBlock Grid.Column="1" PreviewMouseDown="TextBlock_PreviewMouseDown" Text="{Binding Temperatura1}"></TextBlock>
                        <TextBlock Grid.Column="2" PreviewMouseDown="TextBlock_PreviewMouseDown" Text="{Binding Poblacion2}"></TextBlock>
                        <TextBlock Grid.Column="3" PreviewMouseDown="TextBlock_PreviewMouseDown" Text="{Binding Temperatura2}"></TextBlock>
                        <ProgressBar Grid.Column="4" Minimum="0" Maximum="30" Value="{Binding DiferenciaTemp}"></ProgressBar>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Grid.Row="1" Click="Button_Click">Dale clic!</Button>
        
    </Grid>    
</Window>

--------------------------------------------------------------------COMBOBOX Y CHECHBOX------------------------------------------------------------------
------------------------------------CODIGO C#----------------------------
namespace practicaWPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

            List<Capitales> listaCapitales = new List<Capitales>();
            listaCapitales.Add(new Capitales { NombreCapital = "Quito" });
            listaCapitales.Add(new Capitales { NombreCapital = "Bogota" });
            listaCapitales.Add(new Capitales { NombreCapital = "Caracas" });
            listaCapitales.Add(new Capitales { NombreCapital = "Buenos Aires" });
            listaCapitales.Add(new Capitales { NombreCapital = "DF" });

            cbCapitales.ItemsSource = listaCapitales;

        }

        private void chbCapitales_Checked(object sender, RoutedEventArgs e)
        {
            Quito.IsChecked = true;
            Bogota.IsChecked = true;
            Caracas.IsChecked = true;
            Buenos_Aires.IsChecked = true;
            DF.IsChecked = true;
        }

        private void chbCapitales_Unchecked(object sender, RoutedEventArgs e)
        {
            Quito.IsChecked = false;
            Bogota.IsChecked = false;
            Caracas.IsChecked = false;
            Buenos_Aires.IsChecked = false;
            DF.IsChecked = false;
        }

        private void individual_Checked(object sender, RoutedEventArgs e)
        {
            if(Quito.IsChecked == true && Bogota.IsChecked == true && Caracas.IsChecked == true && Buenos_Aires.IsChecked == true && DF.IsChecked == true)
            {
                chbCapitales.IsChecked = true;
            }
            else
            {
                chbCapitales.IsChecked = null;
            }
        }
        private void individual_Unchecked(object sender, RoutedEventArgs e)
        {
            if (Quito.IsChecked == false && Bogota.IsChecked == false && Caracas.IsChecked == false && Buenos_Aires.IsChecked == false && DF.IsChecked == false)
            {
                chbCapitales.IsChecked = false;
            }
            else
            {
                chbCapitales.IsChecked = null;
            }
        }
    }
    public class Capitales
    {
        public string NombreCapital { get; set; }
    }
}
---------------------------------CODIGO XAML---------------------------------
Window x:Class="practicaWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:practicaWPF"
        mc:Ignorable="d"
        Title="Interfaz WPF" Height="550" Width="1200">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="350"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">
            <ComboBox Name ="cbCapitales">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding NombreCapital}" FontSize="16"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>
        <StackPanel Grid.Column="1" >
            <Label FontSize="18" FontWeight="ExtraBold" HorizontalAlignment="Center">Paises</Label>
            <CheckBox Name ="chbCapitales" IsThreeState="True" Margin="200,50,0,30" Checked="chbCapitales_Checked" Unchecked="chbCapitales_Unchecked">Agregar todas</CheckBox>
            <StackPanel Margin="200,0,500,0">
                <CheckBox Name ="Quito" Checked="individual_Checked" Unchecked="individual_Unchecked">Quito</CheckBox>
                <CheckBox Name ="Bogota" Checked="individual_Checked" Unchecked="individual_Unchecked">Bogotá</CheckBox>
                <CheckBox Name ="Caracas" Checked="individual_Checked" Unchecked="individual_Unchecked">Caracas</CheckBox>
                <CheckBox Name ="Buenos_Aires" Checked="individual_Checked" Unchecked="individual_Unchecked">Buenos Aires</CheckBox>
                <CheckBox Name ="DF" Checked="individual_Checked" Unchecked="individual_Unchecked">DF</CheckBox>
            </StackPanel>
        </StackPanel>
    </Grid>    
</Window>
--------------------------------------------------------------------RADIO BUTTON-------------------------------------------------------------
------------------------------CODIGO C#-----------------------------------
namespace practicaWPF
{
    /// <summary>
    /// Interaction logic for MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();

        }

        private void RadioButton_Click(object sender, RoutedEventArgs e)
        {
            Erojo.Visibility = Visibility.Visible;
            Eamarillo.Visibility = Visibility.Hidden;
            Everde.Visibility = Visibility.Hidden;
        }

        private void RadioButton_Click_1(object sender, RoutedEventArgs e)
        {
            Erojo.Visibility = Visibility.Hidden;
            Eamarillo.Visibility = Visibility.Visible;
            Everde.Visibility = Visibility.Hidden;
        }

        private void RadioButton_Click_2(object sender, RoutedEventArgs e)
        {
            Erojo.Visibility = Visibility.Hidden;
            Eamarillo.Visibility = Visibility.Hidden;
            Everde.Visibility = Visibility.Visible;
        }
    }
}
-----------------------------------CODIGO XAML---------------------------------
<Window x:Class="practicaWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:practicaWPF"
        mc:Ignorable="d"
        Title="Interfaz WPF" Height="550" Width="1200">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="75"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0">
            <TextBlock Text="SEMAFORO" FontSize="22" FontStyle="Oblique" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkMagenta"></TextBlock>
        </StackPanel>

        <StackPanel Grid.Row="1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"></ColumnDefinition>
                    <ColumnDefinition Width="0.5*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Margin="50,100,0,0">
                    <RadioButton Margin="10" Click="RadioButton_Click">
                        <TextBlock Text="Rojo" Foreground="Red" Background="Black" FontSize="35"></TextBlock>
                    </RadioButton>
                    <RadioButton Margin="10" Click="RadioButton_Click_1">
                        <TextBlock Text="Amarrillo" Foreground="Yellow" Background="Black" FontSize="35"></TextBlock>
                    </RadioButton>
                    <RadioButton Margin="10" Click="RadioButton_Click_2">
                        <TextBlock Text="Verde" Foreground="LightGreen" Background="Black" FontSize="35"></TextBlock>
                    </RadioButton>
                </StackPanel>
                <Grid Grid.Column="1">
                    <Image Source="C:\Users\fmatamoros\Desktop\semaforo.png" Width="388" Height="394" Margin="88,2,124,398"/>
                    <Ellipse Width="80" Height="80" Fill="Red" Margin="247,58,269,656" Name="Erojo" Visibility="Hidden"></Ellipse>
                    <Ellipse Width="85" Height="85" Fill="Yellow" Margin="229,163,251,546" Name ="Eamarillo" Visibility="Hidden"></Ellipse>
                    <Ellipse Width="85" Height="85" Fill="Green" Margin="229,270,250,436" Name="Everde" Visibility="Hidden"></Ellipse>
                </Grid>
            </Grid>
        </StackPanel>
                  
    </Grid>
</Window>
