using System;

namespace practica
{
    class Program
    {

    
//-----------------------ELSE IF------------------------- 

//Console.WriteLine("Introduzca su edad: ");

//int edad = Int32.Parse(Console.ReadLine());

//if (edad < 18) Console.WriteLine("Usted es menor de edad!");

//else if (edad < 30) Console.WriteLine("Joven");

//else if (edad < 60) Console.WriteLine("Adulto");

//else Console.WriteLine("Anciano");

//-----------------------SWITCH CASE------------------------- 

//Console.WriteLine("Ingrese elija medio de transporte (auto, tren, avion)");

//string medioTransporte = Console.ReadLine();

//switch (medioTransporte)
//{
//    case "auto":
//        Console.WriteLine("Velocidad media 90 km/h");
//        break;

//    case "tren":
//        Console.WriteLine("Velocidad media 250 km/h");
//        break ;

//    case "avion":
//        Console.WriteLine("Velocidad media 600 km/h");
//        break;

//    default:
//        Console.WriteLine("Transporte no contemplado");
//        break;
//}

//Console.WriteLine("Ha termino el programa");

//------------------------EXCEPCIONES---------------------

//Random Aleatorio = new Random();
//int numAleatorio = Aleatorio.Next(0, 100);
//int numero = 0;
//Console.WriteLine("Adivina numero entre 0 y 100\nIngrese un numero: ");
//try
//{
//    numero = int.Parse(Console.ReadLine());
//}
//catch (Exception ex)
//{
//    Console.WriteLine(ex.Message);  
//}
//bool encontrado = false;
//int contador = 0;
//try { 
//while(encontrado == false)
//{
//    if(numero < numAleatorio)
//    {
//        Console.WriteLine("El numero es mayor: ");
//        numero = int.Parse(Console.ReadLine());
//        contador++;
//    }
//    if(numero > numAleatorio)
//    {
//        Console.WriteLine("El numero es menor: ");
//        numero = int.Parse(Console.ReadLine());
//        contador++;
//    }
//    if(numero == numAleatorio)
//    {
//        contador++;
//        Console.WriteLine($"Correcto! numero adivinado con {contador} intentos!");
//        encontrado = true;
//    }
//}
//}
//catch(Exception ex)
//{
//    Console.WriteLine(ex.Message);
//}

//-------------------------THROW------------------------

//public static void Main(string[] args)
//{
//    Console.WriteLine("Ingrese numero del mes: ");
//    int numeroMes = int.Parse(Console.ReadLine());
//    Console.WriteLine(obtenerMes(numeroMes));

//}


//public static string obtenerMes(int mes)
//{
//    switch (mes)
//    {
//        case 1:
//            return "Enero";

//        case 2:
//            return "Febrero";
//        case 3:
//            return "Marzo";

//        case 4:
//            return "Abril";
//        case 5:
//            return "Mayo";

//        case 6:
//            return "Junio";
//        case 7:
//            return "Julio";

//        case 8:
//            return "Agosto";
//        case 9:
//            return "Septiembre";

//        case 10:
//            return "Octubre";
//        case 11:
//            return "Noviembre";

//        case 12:
//            return "Diciembre";

//        default:
//            return "Mes Erroneo";
//                    throw new ArgumentOutOfRangeException();    
//    }
//}

//--------------------GETTERS Y SETTERS-------------------

        //    public static void Main(string[] args)
        //    {
        //        Vehiculo auto = new Vehiculo();
        //        Vehiculo auto2 = new Vehiculo(0.750, 2200.5);
        //        Vehiculo auto3 = new Vehiculo();
        //        Console.WriteLine(auto.getInfoVehiculo());
        //        Console.WriteLine(auto2.getInfoVehiculo());
        //        Console.WriteLine(auto2.getExtras());
        //        auto3.setExtras(true, "Cuero");
        //        Console.WriteLine(auto3.getExtras());
        //    }
        //}
        //public class Vehiculo
        //    {
        //        private double ancho;
        //        private double largo;
        //        private bool climatizador;
        //        private string tapiceria;

        //        public Vehiculo()
        //        {
        //            largo = 2300.5;
        //            ancho = 0.800;
        //            tapiceria = "Tela";
        //        }
        //        public Vehiculo(double largo, double ancho)
        //        {
        //            this.largo = largo;
        //            this.ancho = ancho;
        //            tapiceria = "Tela";
        //    }

        //        public string getInfoVehiculo()
        //        {
        //            return "Informacion del vehiculo:\nAncho: " + ancho + " Largo: " + largo + " Climatizador: " + climatizador + " Tapiceria: " + tapiceria; 
        //        }

        //        public void setExtras(bool paramClimatizador, string paramTapiceria)
        //        {
        //            climatizador = paramClimatizador;
        //            tapiceria = paramTapiceria; 
        //        }

        //        public string getExtras()
        //        {
        //        return "Extras del vehiculo:\nTapiceria: " + tapiceria + " Climatizador: " + climatizador;
        //        }
        //    }

        //--------------------------POO-----------------------------

        public static void Main(string[] args)
        {
            realizarTarea();
            
            var miVarible = new {nombre ="Juan", edad = 24 }; //DECLARACION DE CLASE ANONIMA
            Console.WriteLine(miVarible.nombre + " " + miVarible.edad);
            var miOtraVariable = new { nombre = "Ana", edad = 25 };
            miVarible = miOtraVariable;
        }

        static void realizarTarea()

        {
            Punto origen = new Punto();
            Punto destino = new Punto(150, 90);
            double distancia = origen.getDistancia(destino);
            Console.WriteLine($"La distancia entre los puntos es de: {distancia}");
            Console.WriteLine($"Numero de objetos creados:{Punto.ContadorDeObjetos()}");
            Punto.calcular();
            Console.WriteLine("Finalizacion del programa");
                      
        }
        //-------------------------CLASE PUNTO-----------------------
        public class Punto
        {
        private int x, y;
        public Punto()
        {
            this.x = 0;
            this.y = 0; 
        }
        public Punto(int x, int y)
        {
            this.x = x;
            this.y = y;
        }

        public double getDistancia(Punto otroPunto)
        {
            int xDif =this.x - otroPunto.x;
            int yDif =this.y - otroPunto.y;

            double distanciaPuntos = Math.Sqrt(Math.Pow(xDif, 2) + Math.Pow(yDif, 2));
            return distanciaPuntos;
        }

    }
    public static int ContadorDeObjetos()=> contadorDeObjetos;

        public static void calcular()
        {
            Console.WriteLine("Ingrese un numero: ");
            int numero1 = int.Parse(Console.ReadLine());
            Console.WriteLine("Ingrese un numero: ");
            int numero2 = int.Parse(Console.ReadLine());
            Console.WriteLine("Que operacion desea realizar con los numeros?");
            Console.WriteLine("(1)Suma: ");
            Console.WriteLine("(2)Resta: ");
            Console.WriteLine("(3)Multipliacacion: ");
            Console.WriteLine("(4)Division: ");
            Console.WriteLine("ELIJA UNA OPCION: ");
            string opcion = Console.ReadLine();

            switch (opcion)
            {
                case "1":
                    Console.WriteLine($"la suma es: {numero1+numero2}"); 
                    break;
                case "2":
                    Console.WriteLine($"la resta es: {numero1 - numero2}");
                    break;
                case "3":
                    Console.WriteLine($"la multipliacacion es: {numero1 * numero2}");
                    break;
                case "4":
                    Console.WriteLine($"la division es: {numero1 / numero2}");
                    break;
                    default:
                    Console.WriteLine("Seleccione una opcion correcta!");
                    break;
            }

        }
//-----------------------------ARRAYS-------------------------------


         public static void Main(string[] args)
        {
            //array implicito
            var datos = new[] {"Juan", "Diaz", "Espa√±a"};

            //array de objetos
            Empleados[] arrayEmpleados = new Empleados[2];
            Empleados Ana = new Empleados("Ana", 34);
            Empleados Juan = new Empleados("Juan", 23);
            arrayEmpleados[0] = Ana;
            arrayEmpleados[1] = Juan;

            //array de tipos o clases anonimas

            var personas = new[]
            {
                new {nombre = "Lucas", edad = 23},
                new {nombre = "Maria", edad = 56},
                new {nombre = "Pedro", edad = 37}
            };

            for(int i = 0;i < arrayEmpleados.Length ; i ++)
            {
                Console.WriteLine(arrayEmpleados[i].getEmpleados());
            }
            Console.WriteLine("----------------------------------");
            foreach(string valores in datos)
            {
                Console.WriteLine(valores);   
            }
            Console.WriteLine("----------------------------------");
            foreach (var variable in personas)
            {
                Console.WriteLine(variable);
            }
            {

            }

        }
        

    }
    public class Empleados
    {
        public string nombre;
        private int edad;
        public Empleados(string nombre, int edad)
        {
            this.nombre = nombre;
            this.edad = edad;
        }

        public string getEmpleados()
        {
            return "Nombre: " + nombre + " Edad: " + edad;
        }
        
        //-----------------------ARRAYS EN RETORNOS DE METODOS----------------



        static void Main(string[] args)
        {
            
            foreach (int i in leerDatos())
            {
                Console.WriteLine(i);   
            }  
            
        }

        static int[] leerDatos()
        {
            Console.WriteLine("Cuantos elemnentos desea en el array?: ");
            int respuesta = int.Parse(Console.ReadLine());
            int[] datos = new int[respuesta];
            for (int i = 0; i < respuesta; i++)
            {
                Console.WriteLine($"Introduccion el dato para la posicion {i}: ");
                datos[i] = int.Parse(Console.ReadLine());
            }
            return datos;
        }
        
        //-----------------------ARRAYS EN RETORNOS DE METODOS----------------

        static void Main(string[] args)
        {
            
            foreach (int i in leerDatos()) Console.WriteLine(i);    
            
        }

        static int[] leerDatos()
        {
            Console.WriteLine("Cuantos elemnentos desea en el array?: ");
            int respuesta = int.Parse(Console.ReadLine());
            int[] datos = new int[respuesta];
            for (int i = 0; i < respuesta; i++)
            {
                Console.WriteLine($"Introduccion el dato para la posicion {i}: ");
                datos[i] = int.Parse(Console.ReadLine());
            }
            return datos;
        }
        
       //--------------------------HERENCIA, POLIMORFISMO E INTERFACES--------------------------

        static void Main(string[] args)
        {
            Caballo Babieca = new Caballo("Babieca");
            Humano Juan = new Humano("Juan");
            Gorila Copito = new Gorila("Copito");

            Mamiferos animal2 = new Mamiferos("Bucefalo");
            Mamiferos animal = new Caballo("Bucefalo");//Principio de sustitucion
            Mamiferos persona = new Humano("Pablo"); //Principio de sustitucion

            animal2 = Babieca; //Principio de sustitucion 2

            Mamiferos[] almacenAnimales = new Mamiferos[3];
            almacenAnimales[0] = Babieca;
            almacenAnimales[1] = Juan;
            almacenAnimales[2] = Copito;

            for (int i = 0; i < 3; i++)
            {
                almacenAnimales[i].pensar();//aplicacion del polimorfismo en el metodo pensar
            }

            Ballena miBallena = new Ballena("Wally");
            miBallena.nadar();

            IMamiferosTerrestres IMiBabieca = Babieca;
            ISaltoConPatas IMiBabieca2 = Babieca;

            Console.WriteLine($"Numero de patas de Babieca: {IMiBabieca.numeroPatas()}");
            Console.WriteLine($"Con cuantas patas salta Babieca?: {IMiBabieca2.numeroPatas()}");

            Lagartija Juancho = new Lagartija("Juancho");
            Juancho.respirar();
            Juancho.getNombre();
            animal.getNombre();


            //Copito.trepar();
            //Juan.getNombre();
            //Babieca.getNombre();
            //Copito.getNombre();
        }

    }

    interface IMamiferosTerrestres
    {
        int numeroPatas();
    }
    interface IanimalesYDeportes
    {
        string tipoDeporte();
        Boolean esOlimpico();
    }

    interface ISaltoConPatas
    {
        int numeroPatas();
    }

    abstract class Animales
    {
        public void respirar()
        {
            Console.WriteLine("Soy capaz de respirar");
        }

        public abstract void getNombre();
    }

    class Lagartija : Animales
    {
        private string nombreReptil;

        public Lagartija(string nombre)
        {
            nombreReptil = nombre;  
        }
        public override void getNombre()
        {
            Console.WriteLine($"El nombre del reptil es: {nombreReptil}");
        }
    }
    class Mamiferos : Animales
    {

        private string nombreSerVivo;

        public Mamiferos(string nombre)
        {
            nombreSerVivo = nombre;
        }
        
        public void cuidarCrias()
        {
            Console.WriteLine("Cuido de mis crias hasta que se valgan por si solas");
        }

        public virtual void pensar()
        {
            Console.WriteLine("Pensamiento basico");
        }

        public override void getNombre()
        {
            Console.WriteLine($"El nombre del mamifero es: {nombreSerVivo}");
        }
    }

    class Ballena : Mamiferos
    {
        public Ballena(string nombreBallena) : base(nombreBallena)
        {

        }

        public void nadar()
        {
            Console.WriteLine("Soy capaz de nadar");
        }
    }

    class Caballo : Mamiferos, IMamiferosTerrestres, IanimalesYDeportes, ISaltoConPatas
    {
        public Caballo(string nombreCaballo) : base(nombreCaballo)
        {

        }
        public void galopar()
        {
            Console.WriteLine("Soy capaz de galopar");
            respirar();
        }

        int IMamiferosTerrestres.numeroPatas()
        {
            return 4;
        }

        int ISaltoConPatas.numeroPatas()
        {
            return 2;
        }
        public string tipoDeporte()
        {
            return "Carrera de caballos";
        }

        public Boolean esOlimpico()
        {
            return true;
        }
    }

    class Humano : Mamiferos
    {

        public Humano(string nombreHumano) : base(nombreHumano)
        {

        }
        public override void pensar()
        {
            Console.WriteLine("Soy capaz de pensar y razonar");
        }
    }

    class Adolescente : Humano
    {
        public Adolescente(string nombreAdolescente) : base(nombreAdolescente)
        {

        }
        public override void pensar()
        {
            Console.WriteLine("No puedo pensar con claridad");
        }
    }
    class Gorila : Mamiferos, IMamiferosTerrestres
    {

        public Gorila(string nombreGorila) : base(nombreGorila)
        {

        }
        public void trepar()
        {
            Console.WriteLine("Soy capaz de trepar");
        }

        public override void pensar()
        {
            Console.WriteLine("Pensamiento intuitivo avanzado");
        }

        public int numeroPatas()
        {
            return 2;
        }
    }

    class Chimpance : Gorila
    {
        public Chimpance(string nombreChimpance):base(nombreChimpance)
        {

        }
    }
        //---------------------------EJERCICIO----------------------------

        static void Main(string[] args)
        {
            Avion miAvion = new Avion();
            miAvion.conducir();
            miAvion.arrancarMotor();
            miAvion.pararMotor();
            Auto miAuto = new Auto();
            miAuto.conducir();
            miAuto.arrancarMotor();
            Vehiculo Vehiculo = new Auto();
            Vehiculo.pararMotor();

            Console.WriteLine( "-------------PILOMORFISMO EN ACCION--------------------");
            Vehiculo miVehiculo = miAuto;
            miVehiculo.conducir();
            miVehiculo = miAvion;
            miAvion.conducir();
        }
    }
    class Vehiculo
    {
        public void arrancarMotor()
        {
            Console.WriteLine("Motor arrancado");
        }
        public void pararMotor()
        {
            Console.WriteLine("Motor parado");
        }
        public virtual void conducir()
        {
            Console.WriteLine("Conduciendo");
        }
    }

    class Avion : Vehiculo
    {
        public override void conducir()
        {
            Console.WriteLine("Conduciendo avion");
        }
    }
    class Auto : Vehiculo
    {
        public override void conducir()
        {
            Console.WriteLine("Conduciendo auto");
        }
        
        //-------------------EJERCICIO INTERFACES------------------
        static void Main(string[] args)
        {
            AvisosTrafico av1 = new AvisosTrafico();
            av1.mostrarAviso();

            AvisosTrafico av2 = new AvisosTrafico("Jefatura Provincial", "Sancion por exceso de velocidad", "05-05-2021");    
            av2.mostrarAviso();
            Console.WriteLine(av2.getFecha());
        }

    class AvisosTrafico : IAvisos
    {
        private string remitente;
        private string mensaje;
        private string fecha;

        public AvisosTrafico()
        {
            remitente = "DGT";
            mensaje = "Sancion cometida: Pague antes de los 3 dias y se reducira en la sansion de un 50%";
            fecha = "";
        }
        public AvisosTrafico(string remitente, string mensaje, string fecha)
        {
            this.remitente = remitente;
            this.mensaje = mensaje; 
            this.fecha = fecha;
        }
        public string getFecha()
        {
            return fecha;
        }

        public void mostrarAviso()
        {
            Console.WriteLine("Mensaje: {0} ha sido enviado por {1} el dia {2}", mensaje, remitente, fecha);
        }
     internal interface IAvisos
    {
        void mostrarAviso();
        string getFecha();
    }
    
}
